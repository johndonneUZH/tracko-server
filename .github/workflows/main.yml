name: Deploy to Server

on:
  workflow_run:
    workflows: ["Dockerize"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run if the dockerize workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
             
      - name: Install WireGuard and sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard sshpass
             
      - name: Setup WireGuard connection
        run: |
          echo "${{ secrets.WG_CONFIG }}" | sudo tee /etc/wireguard/wg0.conf > /dev/null
          sudo chmod 600 /etc/wireguard/wg0.conf
          sudo wg-quick up wg0
          
      - name: Wait for WireGuard connection
        run: |
          for i in {1..30}; do
            if ping -c 1 10.0.0.1 >/dev/null 2>&1; then
              echo "WireGuard connection established"
              break
            fi
            echo "Waiting for WireGuard connection... ($i/30)"
            sleep 2
          done

      - name: Deploy application (Single SSH Connection)
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_PROFILE }}@10.0.0.1 "
            echo '=== Starting deployment ===' &&
            
            echo '=== Stopping existing containers ===' &&
            docker stop springboot_container tracko-server 2>/dev/null || true &&
            docker rm springboot_container tracko-server 2>/dev/null || true &&
            
            echo '=== Pulling latest image ===' &&
            docker pull ${{ secrets.dockerhub_username }}/${{ secrets.dockerhub_repo_name }}:latest &&
            
            echo '=== Starting new container ===' &&
            docker run -d --name tracko-server -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=production \
              -e MONGO_DB_URI='${{ secrets.MONGO_DB_URI }}' \
              -e MONGO_DB_NAME='${{ secrets.MONGO_DB_NAME }}' \
              -e JWT_SECRET='${{ secrets.JWT_SECRET }}' \
              -e GEMINI_API_KEY='${{ secrets.GEMINI_API_KEY }}' \
              -e GEMINI_API_URL='${{ secrets.GEMINI_API_URL }}' \
              --restart unless-stopped \
              ${{ secrets.dockerhub_username }}/${{ secrets.dockerhub_repo_name }}:latest &&
            
            echo '=== Connecting to network ===' &&
            docker network connect reverse-proxy_default tracko-server &&
            
            echo '=== Cleaning up old images ===' &&
            docker image prune -f &&
            
            echo '=== Deployment completed successfully ==='
          "
             
      - name: Cleanup WireGuard
        if: always()
        run: sudo wg-quick down wg0
